{"version":3,"file":"static/chunks/2-ca3ff7116278e7e1.js","mappings":"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","sources":["webpack://_N_E/./src/config/app.ts","webpack://_N_E/./src/config/build.ts","webpack://_N_E/./src/config/site.ts","webpack://_N_E/./src/config/constants.ts","webpack://_N_E/./src/helpers/basic/strings.ts","webpack://_N_E/./src/helpers/basic/index.ts","webpack://_N_E/./src/helpers/hocs/withAuth/withAuth.tsx","webpack://_N_E/./src/helpers/hocs/index.ts","webpack://_N_E/./src/helpers/ui/pageUtils.tsx","webpack://_N_E/./src/helpers/ui/index.ts","webpack://_N_E/./src/helpers/index.ts","webpack://_N_E/./src/ui/elements/Basic/Spinner/Spinner.tsx","webpack://_N_E/./src/ui/elements/Basic/LoaderSplash/LoaderSplash.tsx","webpack://_N_E/./src/ui/elements/Basic/PageTitle/PageTitle.tsx","webpack://_N_E/./src/ui/elements/Basic/PageTitle/index.ts","webpack://_N_E/./src/ui/elements/Basic/Scrollable/Scrollable.tsx","webpack://_N_E/./src/ui/elements/Basic/Toasts/Toasts.tsx","webpack://_N_E/./src/ui/elements/Basic/index.ts","webpack://_N_E/./src/ui/elements/ShowError/ShowError.tsx","webpack://_N_E/./src/ui/elements/ShowError/index.ts","webpack://_N_E/./src/ui/elements/index.ts","webpack://_N_E/./src/ui/index.ts","webpack://_N_E/./src/layout/structure/HtmlHeader/HtmlHeader.tsx","webpack://_N_E/./src/layout/structure/Panel/Panel.tsx","webpack://_N_E/./src/layout/structure/PageContent/PageContent.tsx","webpack://_N_E/./src/layout/structure/GenericPageLayout/GenericPageLayout.tsx","webpack://_N_E/./src/layout/structure/index.ts","webpack://_N_E/./src/layout/index.ts","webpack://_N_E/./src/layout/pages/CommonPage/CommonPage.tsx","webpack://_N_E/./src/layout/pages/CommonPage/index.ts","webpack://_N_E/./src/components/Common/DebugData/DebugData.tsx","webpack://_N_E/./src/components/Common/NotFound/Content/NotFoundContent.tsx","webpack://_N_E/./src/components/Common/NotFound/Section/NotFoundSection.tsx","webpack://_N_E/./src/components/Common/NotFound/index.ts","webpack://_N_E/./src/components/Common/index.ts","webpack://_N_E/./src/components/index.ts","webpack://_N_E/./src/layout/pages/NotFoundPage/NotFoundPage.tsx","webpack://_N_E/./src/layout/pages/NotFoundPage/index.ts","webpack://_N_E/./src/layout/pages/UserPage/UserPage.tsx","webpack://_N_E/./src/layout/pages/UserPage/index.ts","webpack://_N_E/./src/layout/pages/index.ts","webpack://_N_E/./src/layout/structure/GenericPageLayout/GenericPageLayout.module.scss","webpack://_N_E/./src/layout/structure/PageContent/PageContent.module.scss","webpack://_N_E/./src/layout/structure/Panel/Panel.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["import { defaultMuiThemeMode, TMuiThemeMode } from '@/core/types';\nimport { isDev } from './build';\n\nexport const rootRoute = '/';\nexport const visitorRoute = '/visitor';\n\nexport const defaultLang = 'en';\n\nexport const themeMode: TMuiThemeMode = defaultMuiThemeMode;\n\nexport const defaultToastDelay = isDev ? 1500 : 1000;\n\n// Use default language texts for absent translations instead translation identifiers.\nexport const translateFallbackToDefaultLanguage = true;\n","export const isBrowser = typeof window !== 'undefined'; // NOTE: `!!process.browser` -- tsserver 6385: `browser` is deprecated\nexport const isLocalhost = isBrowser && window.location.host.startsWith('localhost');\n\nexport const nodeEnv = process.env.nodeEnv;\nexport const isTest = !!process.env.isTest;\n\nexport const devMode = process.env.NEXT_PUBLIC_DEV;\nexport const demoMode = process.env.NEXT_PUBLIC_DEMO;\nexport const isDev = isTest || !!devMode;\nexport const isDemo = /* isDev || */ !!demoMode;\nexport const isProd = !isDev;\nexport const isDevServer = isDev && devMode === 'DEVSERVER';\nexport const isDevBrowser = isDev && isBrowser;\n\n// To use mirage server in dev mode (see `src/mirage-server`)?\nexport const toUseMirageServer = false; // isDevServer && isBrowser;\n\nexport const DEBUG = isDev;\n\nexport const version = process.env.version;\nexport const timetag = process.env.timetag;\nexport const timestamp = process.env.timestamp;\nexport const buildTag = process.env.buildTag;\n\n// DEBUG: Allow to join on CasterLogin and CasterPreview without any conditions.\nexport const allowToFakeStart = isDev;\n// DEBUG: Stay on the main screen (3rd) instead going to final (4th) screen.\nexport const dontGoToFinishedScreen = false; // isDev;\n","import { defaultLang } from './app';\n\nexport const htmlLang = defaultLang;\nexport const titleDelim = ' â€” ';\nexport const siteUrl = 'https://sample-auth-app.lilliputten.ru/';\nexport const title = 'Sample auth app';\nexport const descr = title; // TODO\nexport const keywords = ['sample', 'auth', 'app'];\n\n/* // TODO: Some params for real (public) project\n * export const faviconUrl = '/static/favicon.ico';\n * export const faviconPngUrl = '/static/favicon-120x120.png';\n * export const faviconSvgUrl = '/static/favicon.svg';\n * export const opImageUrl = '/static/logo-256.png';\n * export const opImageWidth = 256;\n * export const opImageHeight = 256;\n */\n\nexport const notFoundTitle = 'Page not found';\n\n// NOTE: Include extrnal font cdn link in `src/pages/_document.tsx` or import\n// installed font in `src/core/global/global-includes.ts`. Remain empty value\n// to omit urls.\n// export const fontUrl =\n//   'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap';\nexport const fontUrl = undefined;\n","/** Date conversion & presentation templates... */\n\n// Date/time formats for use in DatePicker and other date/time-related\n// components, @see: https://date-fns.org/v2.16.1/docs/format\nexport const dateFormat = 'yyyy.MM.dd';\nexport const timeFormat = 'HH:mm';\nexport const timeSecFormat = 'HH:mm:ss';\nexport const timeMsFormat = 'HH:mm:ss:SSS';\nexport const dateTimeFormat = dateFormat + ' ' + timeFormat;\nexport const dateTimeFormatTz = dateFormat + ' ' + timeFormat + ' zzz';\nexport const dateTimeSecFormat = dateFormat + ' ' + timeSecFormat;\nexport const dateTimeSecFormatTz = dateFormat + ' ' + timeSecFormat + ' zzz';\nexport const dateTimeMsFormat = dateFormat + ' ' + timeMsFormat;\nexport const dateTimeMsFormatTz = dateFormat + ' ' + timeMsFormat + ' zzz';\nexport const dateRangeDelim = ' â€“ ';\n\nexport const timeIntervals = 60;\n\nexport const secondTicks = 1000;\nexport const minuteTicks = 60 * secondTicks;\nexport const hourTicks = minuteTicks * 60;\nexport const dayTicks = hourTicks * 24;\nexport const weekTicks = dayTicks * 7;\n// export const monthTicks = 31 * dayTicks; // Approx: not for months with 28, 29, 30 days\n// export const yearTicks = 365 * dayTicks; // Approx: not for years with 366 days\n\n/** App title parts delimiter */\n\nexport const defaultQuote = '\"';\nexport const squareOpen = '[';\nexport const squareClose = ']';\nexport const curlyOpen = '{';\nexport const curlyClose = '}';\n\nexport const errRegExp = /^Error[:\\n\\r\\s]*/m;\nexport const errDelim = '\\n'; // <br/>\\n';\nexport const errDelim2 = errDelim + errDelim;\nexport const ellipsis = 'â€¦'; // '...';\n\nexport const maxShowStringLength = 300;\n","/** @module strings\n *  @description Strings utilities\n *  @since 2023.01.26, 20:43\n *  @changed 2023.02.15, 22:55\n */\n\n// import { AxiosError } from 'axios';\n\nimport { defaultQuote } from '@/config/constants';\n\n/**\n * @param {string} val\n * @return {number}\n */\nexport const toNumber = (val: string): number => {\n  return (val && typeof val !== 'number' && Number(val)) || 0;\n};\n/**\n * @param {string} val\n * @return {String}\n */\nexport const toString = (val: string): string => {\n  return val; // String(val);\n};\n/**\n * @param {string} val\n * @return {boolean}\n */\nexport const toBoolean = (val: string): boolean => {\n  return !!(val && val !== 'false' && val !== '0');\n};\n\nexport const typeTransforms = {\n  toNumber,\n  toString,\n  toBoolean,\n};\ntype TTypeTransformsKeys = keyof typeof typeTransforms;\n\n/** Returns length of common parts of two strings\n * @param {String} a\n * @param {String} b\n * @return {Number}\n */\nexport const getCommonLength = (a: string, b: string): number => {\n  const maxLen = Math.min(a.length, b.length);\n  let commonLen = 0;\n  for (let len = 1; len < maxLen; len++) {\n    const s = a.substring(0, len);\n    if (b.indexOf(s) === 0) {\n      commonLen = len;\n    }\n  }\n  return commonLen;\n};\n\n/** Uppercase first letter of string\n * @param {string} str\n * @return {str}\n */\nexport const ucFirst = (str: string): string => {\n  str = String(str);\n  return str && str.charAt(0).toUpperCase() + str.slice(1); // .toLowerCase();\n};\n\n/** Convert string to desired type\n * @param {string} type\n * @param {string} val\n * @return {*}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const toType = (type: string, val: string): string | number | boolean => {\n  const methodName = ('to' + ucFirst(type)) as TTypeTransformsKeys;\n  let result: string | number | boolean = val;\n  if (\n    /* typeTransforms.hasOwnProperty(methodName) && */ typeof typeTransforms[methodName] ===\n    'function'\n  ) {\n    result = typeTransforms[methodName](val);\n  }\n  return result;\n};\n\n/**\n * @param {Number} length - Target hex string length\n * @return {String}\n */\nexport const randomHexString = (length: number): string => {\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += Math.floor(Math.random() * 0xf).toString(16);\n  }\n  return result;\n};\n\n/** Convert (mostly error responses) html to text\n * @param {String} html\n * @return {String}\n */\nexport const html2string = (html: string): string => {\n  return (\n    html &&\n    html // Process error from (html) response body\n      .replace(/\\s*<style>[\\s\\S]*<\\/style>/gm, '')\n      .replace(/<title>(.+)<\\/title>/gi, '$1:\\n')\n      .replace(/<[^<>]*>/g, ' ')\n      .replace(/\\r/gm, '\\n') // Newlines\n      .replace(/[ \\t]+\\n/gm, '\\n') // Hanged spaces\n      .replace(/\\n[ \\t]+/gm, '\\n') // Hanged spaces\n      .replace(/\\n{3,}/gm, '\\n\\n') // Extra newlines\n      .replace(/\\n(.+):*[ \\t\\n]+\\1\\n/gm, '\\n$1:\\n') // Remove repeating titles\n      .trim()\n  ); // Trim\n};\n\n/* // TODO: Move to react strings helper?\n * export const splitMultiline = (text, opt) => {\n *   opt = opt || {}\n *   const textClassName = opt.textClassName || 'Text'\n *   const lineClassName = opt.lineClassName || 'TextLine'\n *   return text.split('\\n\\n').map((text, n) => {\n *     const lines = text.split('\\n').map((line, n) => {\n *       return React.createElement('div', { key: 'line' + String(n), className: lineClassName }, line)\n *     })\n *     return React.createElement('div', { key: 'text' + String(n), className: textClassName }, lines)\n *   })\n * }\n */\n\nexport function padNumber(num: number | string, size: number): string {\n  return String(num).padStart(size, '0');\n}\n\n/** Make periods for long numbers. Returns string presentation of number.\n * @param {String|Number} num\n * @param {String} [periodChar=' ']\n * @return {String}\n */\nexport function periodizeNumber(num: number | string, periodChar: string): string {\n  periodChar = periodChar || ' ';\n  let numStr = String(num);\n  // If long number...\n  if (numStr.length > 3 && !numStr.match(/\\D/)) {\n    numStr = numStr.replace(/\\B(?=(\\d{3})+(?!\\d))/g, periodChar);\n  }\n  return numStr;\n}\n\n/** humanizeId -- Make human-readable string from id (eg, 'thisId' -> 'This Id')\n * @param {String} id\n * @return {String}\n */\nexport function humanizeId(id: string): string {\n  return ucFirst(String(id)).replace(/\\B([A-Z][a-z]+)/g, ' $1');\n}\n\nexport function safeEscape(\n  str: string | number | boolean,\n  quote?: boolean | string,\n  addQuotes?: boolean,\n): string {\n  // Passed only addQuotes flag\n  if (quote === true && addQuotes == null) {\n    addQuotes = true;\n    quote = undefined;\n  }\n  quote = quote && typeof quote === 'string' ? quote : defaultQuote;\n  const quoteReg = new RegExp(quote, 'g');\n  str = String(str)\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(quoteReg, '\\\\' + quote)\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    // .replace(/\\b/g, '\\\\b')\n    .replace(/\\f/g, '\\\\f');\n\n  if (addQuotes === true && quote) {\n    str = quote + str + quote;\n  }\n  return str;\n}\n\nexport function errorToString(error: Error | string): string {\n  if (typeof error === 'string') {\n    return error;\n  }\n  const metaError = error as Error; // & AxiosError;\n  /* // Error sample (AxiosError):\n   * code: \"ERR_NETWORK\"\n   * message: \"Network Error\"\n   * name: \"AxiosError\"\n   * stack: \"AxiosError: Network Error\\n    at XMLHttpRequest.handleError (webpack-internal:///./node_modules/axios/lib/adapters/xhr.js:168:14)\"\n   */\n  const {\n    // code,\n    // name,\n    // stack\n    message,\n  } = metaError;\n  return [\n    // name,\n    // code,\n    message,\n  ]\n    .filter(Boolean)\n    .join(': ')\n    .replace(/^Error:\\s*/, '');\n}\n\nexport function stringToInt32(string: string): number {\n  let hash = 0;\n  if (string.length == 0) return hash;\n  for (let i = 0; i < string.length; i++) {\n    const char = string.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return hash;\n}\n\nexport function intToHex(number: number): string {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n  return number.toString(16).toUpperCase();\n}\n\nexport function stringToHash(string: string): string {\n  return intToHex(stringToInt32(string)).padStart(8, '0');\n}\n\nexport function isTruthyString(val: string) {\n  if (val && val !== 'false' && val !== '0') {\n    return true;\n  }\n  return false;\n}\nexport const str2bool = isTruthyString;\n","// export * from './arrays';\n// export * from './dates';\n// export * from './dom';\n// export * from './errors';\n// export * from './functions';\n// export * from './objects';\n// export * from './parseQuery';\nexport * from './strings';\n// export * from './urls';\n// export * from './uuidv4';\n","import React from 'react';\nimport { useRouter } from 'next/router';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface TWithAuthProps {\n  // router: NextRouter;\n}\n\n// TODO: Implement and use `useAuth` hook\n\nexport function withAuth<P extends JSX.IntrinsicAttributes>(\n  Component: React.ComponentType<P & TWithAuthProps>,\n) {\n  return function WithAuth(props: P) {\n    const [isAuth, setAuth] = React.useState<boolean>(undefined);\n    const router = useRouter();\n    React.useEffect(() => {\n      const {\n        // prettier-ignore\n        asPath,\n        route,\n        isReady,\n      } = router;\n      if (isReady) {\n        // TODO: Detect real authentification state\n        const isAuth = true;\n        console.log('[withAuth:WithAuth]', {\n          asPath,\n          route,\n          isAuth,\n          router,\n        });\n        setAuth(isAuth);\n        // TODO: Redirect to root page if not authentificated\n        if (!isAuth) {\n          router.push('/');\n        }\n      }\n    }, [router, setAuth]);\n    if (isAuth) {\n      return (\n        <Component\n          {...props}\n          // TODO: Pass other params?\n          // router={router}\n        />\n      );\n    }\n  };\n}\n","export * from './withAuth';\n","/** @module pageUtils\n *  @since 2022.02.02, 19:37\n *  @changed 2022.02.02, 19:37\n */\n\nimport * as siteConfig from '@/config/site';\n\nexport function subPageTitle(pageTitle: string): string {\n  const { titleDelim, title: siteTitle } = siteConfig;\n  const title = [pageTitle, siteTitle].filter(Boolean).join(titleDelim);\n  return title;\n}\n","export * from './pageUtils';\n","// export * from './async';\nexport * from './basic';\n// export * from './debug';\nexport * from './hocs';\n// export * from './hooks';\n// export * from './i18next';\n// export * from './store';\n// export * from './storybook';\n// export * from './typescript';\nexport * from './ui';\n","/** @module Spinner\n *  @since 2023.01.27, 20:59\n *  @changed 2023.01.27, 21:24\n */\n\nimport classnames from 'classnames';\n\nimport styles from './Spinner.module.scss';\n\nexport type TSpinnerSize = 'small' | 'medium' | 'large';\nexport type TSpinnerColor = 'primary' | 'white' | 'black';\n\ninterface TSpinnerProps {\n  className?: string;\n  size?: TSpinnerSize;\n  color?: TSpinnerColor;\n}\n\nexport function Spinner(props: TSpinnerProps): JSX.Element {\n  const { className, size, color } = props;\n  const sizeId = size && 'size_' + size;\n  const colorId = color && 'color_' + color;\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    sizeId && styles[sizeId],\n    colorId && styles[colorId],\n  );\n  return <div className={resultedClassName} />;\n}\n","/** @module LoaderSplash\n *  @since 2023.01.27, 21:26\n *  @changed 2023.03.28, 19:35\n */\n\nimport classnames from 'classnames';\n\nimport { Spinner, TSpinnerSize, TSpinnerColor } from '@/ui/elements/Basic/Spinner';\n\nimport styles from './LoaderSplash.module.scss';\n\nexport type TSplashBackground = true | 'page' | 'white' | 'gray' | 'neutral' | 'primary' | 'black';\nexport type TSplashMode = 'cover';\n\ninterface TLoaderSplashProps {\n  className?: string;\n  spinnerSize?: TSpinnerSize;\n  spinnerColor?: TSpinnerColor;\n  fullSize?: boolean;\n  bg?: TSplashBackground;\n  show?: boolean;\n  mode?: TSplashMode;\n}\n\nexport function LoaderSplash(props: TLoaderSplashProps): JSX.Element {\n  const { className, spinnerSize, spinnerColor, fullSize, bg, show = true, mode } = props;\n  const bgId = bg && ['bg', bg].filter((x) => typeof x === 'string').join('_');\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    mode && styles['mode_' + mode],\n    fullSize && styles.fullSize,\n    bgId && styles[bgId],\n    show || styles.hidden,\n  );\n  return (\n    <div className={resultedClassName}>\n      <Spinner className={styles.spinner} size={spinnerSize} color={spinnerColor} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\n\nimport { PropsWithChildrenAndClassName } from '@/core/types';\n\nimport styles from './PageTitle.module.scss';\n\nexport const PageTitle: React.FC<PropsWithChildrenAndClassName> = (props) => {\n  const { children, className } = props;\n  return (\n    <Typography\n      className={classnames(className, styles.root)}\n      fontSize=\"24px\"\n      variant=\"h2\"\n      fontWeight=\"600\"\n      color=\"#333\"\n      mb={3}\n    >\n      {children}\n    </Typography>\n  );\n};\n","export * from './PageTitle';\n","import classnames from 'classnames';\n\n// MUI...\nimport Stack from '@mui/material/Stack';\n\nimport styles from './Scrollable.module.scss';\n\ninterface TScrollableProps {\n  className?: string;\n  containerClassName?: string;\n  children?: React.ReactNode;\n  scrollable?: boolean;\n}\n\nexport function Scrollable(props: TScrollableProps): JSX.Element {\n  const { className, containerClassName, children, scrollable = true } = props;\n  // prettier-ignore\n  return (\n    <Stack\n      className={classnames(\n        className,\n        styles.root,\n        scrollable ? styles.scrollable : styles.clippable,\n      )}\n      flex={1}\n    >\n      <Stack className={classnames(containerClassName, styles.container)} flex={1}>\n        {children}\n      </Stack>\n    </Stack>\n  );\n}\n","/** @module Toasts\n *  @since 2023.01.27, 20:59\n *  @changed 2023.03.31, 18:51\n */\n\nimport React from 'react';\n// import { AxiosError } from 'axios';\nimport { ToastContainer, ToastOptions, toast } from 'react-toastify';\n\nimport { defaultToastDelay } from '@/config/app';\nimport { errorToString } from '@/helpers';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { isProd } from '@/config/build';\n\nexport { toast };\n\n// Export some toast shorthands\n\nexport type TMessage = Error | string; // | AxiosError;\n\nexport type ToastId = ReturnType<typeof toast.info>;\n\nexport type ToastFunc = (msg: TMessage, options?: ToastOptions) => ToastId;\n\nexport function showInfo(msg: TMessage, options?: ToastOptions): ToastId {\n  return toast.info(errorToString(msg), options);\n}\nexport function showSuccess(msg: TMessage, options?: ToastOptions): ToastId {\n  return toast.success(errorToString(msg), options);\n}\nexport function showWarn(msg: TMessage, options?: ToastOptions): ToastId {\n  return toast.warn(errorToString(msg), options);\n}\nexport function showError(msg: TMessage, options?: ToastOptions): ToastId {\n  return toast.error(errorToString(msg), options);\n}\n\n// Create context...\n\nconst toastContextData = { toast };\n\nexport const ToastsContext = React.createContext(toastContextData);\n\nexport function useToast() {\n  const toastsContext = React.useContext(ToastsContext);\n  return toastsContext.toast;\n}\n\ninterface TToastsProps {\n  children: React.ReactNode;\n}\n\nexport function WithToastsWrapper(props: TToastsProps) {\n  const { children } = props;\n  return (\n    <ToastsContext.Provider value={toastContextData}>\n      {children}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={defaultToastDelay}\n        hideProgressBar\n        // newestOnTop\n        closeOnClick\n        // pauseOnFocusLoss={isProd}\n        pauseOnFocusLoss={false}\n        // draggable\n        pauseOnHover={isProd}\n        theme=\"colored\"\n      />\n    </ToastsContext.Provider>\n  );\n}\n","export * from './LoaderSplash';\nexport * from './PageTitle';\nexport * from './Scrollable';\nexport * from './Spinner';\nexport * from './Toasts';\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\n\nimport { PropsWithClassName } from '@/core/types';\nimport { errorToString } from '@/helpers';\n\nimport styles from './ShowError.module.scss';\n\nexport const ShowError: React.FC<{ error: Error | string } & PropsWithClassName> = (props) => {\n  const { error, className } = props;\n  const title = 'Error';\n  const errorText = errorToString(error);\n  return (\n    <Typography className={classnames(className, styles.root)}>\n      <span className={styles.title}>{title}:</span>{' '}\n      <span className={styles.content}>{errorText}</span>\n    </Typography>\n  );\n};\n","export * from './ShowError';\n","export * from './Basic';\nexport * from './ShowError';\n","export * from './elements';\n","import Head from 'next/head';\n\nimport * as siteConfig from '@/config/site';\n\nexport interface THtmlHeaderProps {\n  title?: string;\n  descr?: string;\n  keywords?: string | string[];\n}\n\n/** getPropValue -- Get value from props or site config\n * @param {string} id\n * @param {object} props\n * @return {string}}\n */\nfunction getPropValue(id: keyof THtmlHeaderProps, props: THtmlHeaderProps): string {\n  let val: unknown = props[id]; // Later will be converted to string\n  if (val == null) {\n    val = siteConfig[id];\n  }\n  if (val && Array.isArray(val)) {\n    val = val.join(', ');\n  }\n  return String(val);\n}\n\nexport function HtmlHeader(props: THtmlHeaderProps): JSX.Element {\n  const { title } = props; // getPropValue('title', props);\n  const descr = getPropValue('descr', props);\n  const keywords = getPropValue('keywords', props);\n  return (\n    <Head>\n      {!!title && (\n        <>\n          <title>{title}</title>\n          <meta name=\"title\" content={title} />\n        </>\n      )}\n      <meta name=\"description\" content={descr} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n    </Head>\n  );\n}\n","/** @module Panel\n *  @since 2023.02.21, 00:56\n *  @changed 2023.02.21, 00:56\n *  TODO: Use MUI layout components?\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './Panel.module.scss';\n\ninterface TPanelProps {\n  tag?: string;\n  className?: string;\n  wrapperClassName?: string;\n  children?: React.ReactNode;\n  flex?: boolean;\n  flexVertical?: boolean;\n  padded?: boolean;\n}\n\nexport function Panel(props: TPanelProps): JSX.Element {\n  const { tag = 'div', className, wrapperClassName, children, flex, flexVertical, padded } = props;\n  const renderProps = {\n    className: classnames(className, styles.container, padded && styles.padded),\n  };\n  const contentClassName = classnames(\n    wrapperClassName,\n    styles.wrapper,\n    flex && styles.flex,\n    flexVertical && styles.flexVertical,\n  );\n  // prettier-ignore\n  const renderContent = (\n    <div className={contentClassName}>\n      {children}\n    </div>\n  );\n  return React.createElement(tag, renderProps, renderContent);\n}\n","/** @module PageContent\n *  @since 2023.02.21, 00:56\n *  @changed 2023.02.21, 00:56\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { Panel } from '@/layout/structure/Panel';\n\nimport styles from './PageContent.module.scss';\n\ninterface TPageContentProps {\n  className?: string;\n  children?: React.ReactNode;\n  centered?: boolean;\n  stretched?: boolean;\n}\n\nexport function PageContent(props: TPageContentProps): JSX.Element {\n  const { children, className, centered, stretched } = props;\n  const wrapperClassName = classnames(\n    styles.wrapper,\n    centered && styles.wrapperCentered,\n    stretched && styles.wrapperStretched,\n  );\n  return (\n    <Panel\n      className={classnames(className, styles.container)}\n      wrapperClassName={wrapperClassName}\n      tag=\"section\"\n      padded\n      flex\n      flexVertical\n    >\n      {children}\n    </Panel>\n  );\n}\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport { Typography } from '@mui/material';\n\nimport { WithToastsWrapper } from '@/ui';\nimport { HtmlHeader, THtmlHeaderProps } from '@/layout/structure/HtmlHeader';\nimport { PageContent } from '@/layout/structure/PageContent';\n\nimport styles from './GenericPageLayout.module.scss';\n\nexport interface TGenericPageLayoutProps extends THtmlHeaderProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport function GenericPageLayout(props: TGenericPageLayoutProps): JSX.Element {\n  // NOTE: Get props from nextjs (as `pageProps`)\n  const { className, children, ...restProps } = props;\n  return (\n    <>\n      <HtmlHeader {...restProps} />\n      {/* Theme root for app-through typograpy support */}\n      <Typography className={classnames(className, styles.container)} component=\"article\">\n        {/* Toasts support */}\n        <WithToastsWrapper>\n          {/* Other app layout elements should came here */}\n          <PageContent className={styles.content} stretched>\n            {children}\n          </PageContent>\n        </WithToastsWrapper>\n      </Typography>\n    </>\n  );\n}\n","export * from './GenericPageLayout';\nexport * from './HtmlHeader';\nexport * from './PageContent';\nexport * from './Panel';\n","export * from './pages';\nexport * from './structure';\n","import { NextPage } from 'next';\n\nimport { subPageTitle } from '@/helpers';\nimport { GenericPageLayout } from '@/layout';\n\nexport const CommonPage: NextPage = () => {\n  const pageTitle = 'Common Page';\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout title={title}>\n      {/* TODO: Import common page sith logon form */}\n      CommonPage\n    </GenericPageLayout>\n  );\n};\n","export * from './CommonPage';\n","/** @module DebugData\n *  @since 2023.01.31, 23:16\n *  @changed 2023.01.31, 23:16\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './DebugData.module.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TData = any;\n\ninterface TDebugDataProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  padded?: boolean;\n  data?: TData | string;\n}\n\ninterface DebugDataItemProps {\n  id: string;\n  value?: string | number | boolean;\n}\nfunction DebugDataItem({ id, value }: DebugDataItemProps): JSX.Element {\n  return (\n    <div className={styles.dataItem}>\n      <span className={styles.dataItemLabel}>{id}:</span>{' '}\n      <span className={styles.dataItemValue}>{value}</span>\n    </div>\n  );\n}\n\ninterface TDebugDataContentProps {\n  data: TData;\n}\n\nfunction DebugDataContent({ data }: TDebugDataContentProps): JSX.Element {\n  const { id } = data;\n  const keys = data && (Object.keys(data) as string[]);\n  const items =\n    keys &&\n    keys.map((key: string) => {\n      const value = data[key as keyof TData] as string | boolean | number | undefined;\n      return !!value && <DebugDataItem key={id + ':' + key} id={key} value={value} />;\n    });\n  return <>{items}</>;\n}\n\nexport function DebugData(props: TDebugDataProps): JSX.Element {\n  const { className, padded, data } = props;\n  const content = React.useMemo(() => {\n    if (!data) {\n      // TODO: Throw an error?\n      return 'No data data object passed';\n    } else if (typeof data === 'string') {\n      return data;\n    } else {\n      return <DebugDataContent data={data} />;\n    }\n  }, [data]);\n  // prettier-ignore\n  return (\n    <div className={classnames(className, styles.container, padded && styles.padded)}>\n      {content}\n    </div>\n  );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\n// MUI...\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\ninterface TNotFoundContentProps {\n  className?: string;\n}\n\nfunction NotFoundContent(props: TNotFoundContentProps): JSX.Element {\n  const { className } = props;\n  const router = useRouter();\n  const [url, setUrl] = React.useState('');\n  // NOTE: Preventing build-time NextJS Warning: Text content did not match.\n  React.useEffect(() => {\n    const {\n      // prettier-ignore\n      asPath,\n      isReady,\n    } = router;\n    if (isReady) {\n      const errMessage = 'Page not found: ' + asPath;\n      // eslint-disable-next-line no-console\n      console.warn('[NotFoundContent]', errMessage, {\n        asPath,\n        router,\n      });\n      setUrl(asPath);\n    }\n  }, [router, setUrl]);\n  return (\n    <Box className={classnames(className)} sx={{ textAlign: 'center' }}>\n      <Typography m={2}>\n        Page <u>{url}</u> is not found\n      </Typography>\n      <Typography m={2}>\n        Start from <Link href=\"/\">main page</Link>, please.\n      </Typography>\n    </Box>\n  );\n}\n\nexport default NotFoundContent;\n","/** @module NotFoundSection\n *  @since 2022.02.08, 22:44\n *  @changed 2023.01.31, 22:43\n */\n\nimport classnames from 'classnames';\n\nimport NotFoundContent from '@/components/Common/NotFound/Content/NotFoundContent';\n\ninterface TNotFoundSectionProps {\n  className?: string;\n}\n\nexport function NotFoundSection(props: TNotFoundSectionProps): JSX.Element {\n  const { className } = props;\n  // TODO: Wrap with section (PageSectionWrapper), title etc...\n  return (\n    <div className={classnames(className)}>\n      <NotFoundContent />\n    </div>\n  );\n}\n","export * from './Content';\nexport * from './Section';\n","export * from './DebugData';\nexport * from './NotFound';\n","export * from './Common';\n","import { NextPage } from 'next';\n\nimport * as siteConfig from '@/config/site';\nimport { subPageTitle } from '@/helpers';\nimport { GenericPageLayout } from '@/layout';\nimport { NotFoundSection } from '@/components';\n\nexport const NotFoundPage: NextPage = () => {\n  const pageTitle = siteConfig.notFoundTitle;\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout title={title}>\n      <NotFoundSection />\n    </GenericPageLayout>\n  );\n};\n","export * from './NotFoundPage';\n","import { NextPage } from 'next';\n\nimport { subPageTitle } from '@/helpers';\nimport { GenericPageLayout } from '@/layout';\n\nexport const UserPage: NextPage = () => {\n  const pageTitle = 'User Page';\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout title={title}>\n      {/* TODO: Import common page sith logon form */}\n      UserPage\n    </GenericPageLayout>\n  );\n};\n","export * from './UserPage';\n","export * from './CommonPage';\nexport * from './NotFoundPage';\nexport * from './UserPage';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GenericPageLayout_container__yRORh\",\"content\":\"GenericPageLayout_content__gZioW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageContent_container__q4SX1\",\"wrapper\":\"PageContent_wrapper__6FkTJ\",\"DEBUG\":\"PageContent_DEBUG__fL9e1\",\"wrapperCentered\":\"PageContent_wrapperCentered__nSMvq\",\"wrapperStretched\":\"PageContent_wrapperStretched__15BEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__lyFt4\",\"padded\":\"Panel_padded__mAa_U\",\"wrapper\":\"Panel_wrapper__Hfshy\",\"centered\":\"Panel_centered__0E5fB\",\"flex\":\"Panel_flex__5qaOZ\",\"flexVertical\":\"Panel_flexVertical__byxYO\"};"],"names":["defaultLang","defaultToastDelay","isDev","window","location","host","startsWith","devMode","process","env","NEXT_PUBLIC_DEV","NEXT_PUBLIC_DEMO","isProd","htmlLang","titleDelim","siteUrl","title","descr","keywords","notFoundTitle","fontUrl","undefined","withAuth","Component","props","_React$useState","React","_React$useState2","slicedToArray","Z","isAuth","setAuth","router","useRouter","asPath","route","isReady","console","log","jsx_runtime","jsx","_objectSpread","subPageTitle","pageTitle","siteConfig","filter","Boolean","join","toastContextData","toast","ToastsContext","WithToastsWrapper","children","jsxs","Provider","value","react_toastify_esm","Ix","position","autoClose","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","theme","getPropValue","id","val","Array","isArray","String","HtmlHeader","head_default","Fragment","name","content","Panel","_props$tag","tag","className","wrapperClassName","flex","flexVertical","padded","renderProps","classnames","styles","contentClassName","renderContent","PageContent","centered","stretched","GenericPageLayout","restProps","objectWithoutProperties","_excluded","Typography_Typography","component","CommonPage","layout","eH","Content_NotFoundContent","url","setUrl","warn","Box","sx","textAlign","Typography","m","link_default","href","NotFoundSection","NotFoundPage","UserPage","module","exports"],"sourceRoot":""}